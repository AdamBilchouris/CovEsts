% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corrected_standard_estimator.R
\name{compute_kernel_corrected_est}
\alias{compute_kernel_corrected_est}
\title{Kernel Correction for an Estimated Autocovariance Function.}
\usage{
compute_kernel_corrected_est(
  cov,
  kernel_name,
  kernel_params = c(),
  N_T = 0.1 * length(cov),
  maxLag = length(cov) - 1,
  custom_kernel = FALSE,
  type = "autocovariance"
)
}
\arguments{
\item{cov}{A vector whose values are an estimate autocovariance function.}

\item{kernel_name}{The name of the \link{kernel} function to be used. Possible values are:
"gaussian", "exponential", "wave", "rational_quadratic", "spherical", "circular", "bessel_j", "matern", "cauchy".}

\item{kernel_params}{A vector of parameters of the kernel function. See \link{kernel} for parameters.
In the case of "gaussian", "wave", "rational_quadratic", "spherical" and "circular", \code{N_T} takes the place of \eqn{\theta}.
For kernels that require parameters other than \eqn{\theta}, such as the Matern kernel, those parameters are passed.}

\item{N_T}{The range at which the kernel function vanishes at. Recommended to be \eqn{0.1 N} when considering all lags. This parameter may be large for a lag small estimation lag.}

\item{maxLag}{An optional parameter that determines the maximum lag to compute the estimated autocovariance function at. Defaults to \code{length(cov) - 1}.}

\item{custom_kernel}{If a custom kernel is to be used or not. Defaults to \code{FALSE}. See the examples of \link{compute_corrected_standard_est} for usage.}

\item{type}{Compute either the 'autocovariance' or 'autocorrelation'. Defaults to 'autocovariance'.}
}
\value{
A vector whose values are the kernel corrected autocovariance estimates.
}
\description{
This function applies kernel correction to an estimated autocovariance function.
It considers a kernel \eqn{a(\cdot)} which decays or vanishes to zero (depending on the type of kernel) where \eqn{a(0) = 1.}
The rate or value at which the kernel vanishes is \eqn{N_{T}}, which is recommended to be of order \eqn{0.1 N}, where \eqn{N} is the length of the observation window, however, one may need to play with this value.
\deqn{\widehat{C}^{(a)}(h) = \widehat{C}(h) a(h / N_{T}).}
}
\examples{
X <- rnorm(1000)
Y <- c(X[1], X[2])
for(i in 3:length(X)) { Y[i] <- X[i] - 0.3*X[i - 1] - 0.6*X[i - 2] }
cov_est <- compute_standard_est(Y)
plot(cov_est)
plot(compute_kernel_corrected_est(cov_est,
     "bessel_j", kernel_params=c(0, 1), N_T=0.2*length(Y)))
}

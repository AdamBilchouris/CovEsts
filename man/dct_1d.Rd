% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernel_regression_estimator.R
\name{dct_1d}
\alias{dct_1d}
\title{Compute 1D Discrete Cosine Transform}
\usage{
dct_1d(X)
}
\arguments{
\item{X}{A vector of values for which the discrete cosine transform is being computed.}
}
\value{
A vector of discrete cosine transform values.
}
\description{
This function computes the Type-II discrete cosine transform.
}
\details{
The Type-II discrete cosine transform is obtained using \link[stats:fft]{stats::fft}. Note this method does not utilise Makhoul's method for computing the DCT.
If \eqn{X} is of length N, construct a new signal \eqn{y} of length \eqn{4N}, with values \eqn{y_{2n} = 0, y_{2n + 1} = x_{n}} for \eqn{0 \le n < N},
and \eqn{y_{4N - n} = y_{n}, y_{2N} = 0} for \eqn{0 < n < 2N.}
After this, the following is done (in code): \code{dct <- 0.5 * Re(stats::fft(Y))[1:(length(Y) / 4)]}, which gives the Type-II discrete cosine transform.
}
\examples{
X <- c(1, 2, 3)
dct_1d(X)
}
\references{
Ochoa-Dominguez, H., & Rao, K.R. (2019). Discrete Cosine Transform, Second Edition. CRC Press. 10.1201/9780203729854

Makhoul, J. (1980). A Fast Cosine Transform in One and Two Dimensions. IEEE Transactions on Acoustics, Speech, and Signal Processing (Vol. 28, Issue 1, pp. 27-34). 10.1109/TASSP.1980.1163351

StasiÅ„ski, R. (2002). DCT Computation Using Real-Valued DFT Algorithms. Proceedings of the 11th European Signal Processing Conference.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/symmetric_kernels.R
\name{kernel_symm}
\alias{kernel_symm}
\title{1D isotropic symmetric kernels.}
\usage{
kernel_symm(x, name, params = c(1))
}
\arguments{
\item{x}{A vector or matrix of values of at least length 1}

\item{name}{The name of the kernel. Options are: "gaussian", "wave", "rational_quadratic", "bessel_j".}

\item{params}{A vector of parameters for the kernel. See the documentation below for the position of the parameters. All kernels will have a scale parameter as the first value in the vector.}
}
\value{
A vector of values.
}
\description{
These have the properties of symmetric probability   distributions.
}
\details{
\strong{Symmetric Gaussian Kernel}.
\deqn{a(\tau;\theta) = \sqrt{\pi \theta} \exp(-\tau^{2} / \theta), \theta > 0.}
The \code{params} argument is of the form \code{c(}\eqn{\theta}\code{)}.

\strong{Symmetric Wave Kernel}.
\deqn{a(\tau;\theta) = \left\{ \begin{array}{ll}
(\sqrt{\theta^{2}} \pi)^{-1} \frac{\theta}{\tau} \sin\left( \frac{\tau}{\theta} \right), & \tau \neq 0 \\
1, & \tau = 0
\end{array} ,
\theta > 0 . \right.}
The \code{params} argument is of the form \code{c(}\eqn{\theta}\code{)}

\strong{Symmetric Rational Quadratic Kernel}.
\deqn{a(\tau;\theta) = (\pi \sqrt{\theta})^{-1} (1 - \frac{\tau^{2}}{\tau^{2} + \theta}), \theta > 0.}
The \code{params} argument is of the form \code{c(}\eqn{\theta}\code{)}

\strong{Symmetric Besesel Kernel}.
\deqn{a(\tau; \theta, \nu) = (\Gamma(\frac{1}{2} + \nu)/(2 \sqrt{\pi} \theta \Gamma(1 + \nu))) ( 2^{\nu} \Gamma(\nu + 1) J_{\nu}(\tau / \theta) (\tau / \theta)^{-\nu}), \theta > 0, \nu \geq \frac{d}{2} - 1.}
where \eqn{J_{\nu}(\cdot)} is the Bessel function of the first kind and \eqn{d} is the dimension.
The \code{params} argument is of the form \code{c(}\eqn{\theta, \nu, d}\code{)}.
}
\examples{
x <- c(-2, -1, 0, 1, 2)
theta <- 1
kernel_symm(x, "gaussian", c(theta))
kernel_symm(x, "wave", c(theta))
kernel_symm(x, "rational_quadratic", c(theta))
dim <- 1
nu <- 1
kernel_symm(x, "bessel_j", c(theta, nu, dim))
}
